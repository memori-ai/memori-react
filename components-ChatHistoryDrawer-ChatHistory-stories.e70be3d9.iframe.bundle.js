"use strict";(self.webpackChunk_memori_ai_memori_react=self.webpackChunk_memori_ai_memori_react||[]).push([[2204],{"./src/components/ChatHistoryDrawer/ChatHistory.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,EmptyState:()=>EmptyState,LoadingState:()=>LoadingState,WithCurrentChatDisabled:()=>WithCurrentChatDisabled,WithPagination:()=>WithPagination,WithSearch:()=>WithSearch,WithSelectedChat:()=>WithSelectedChat,WithTranslation:()=>WithTranslation,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _ChatHistory__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/ChatHistoryDrawer/ChatHistory.tsx"),_I18nWrapper__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/I18nWrapper.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const mockApiClient={chatLogs:{getUserChatLogsByToken:(loginToken,memoriID,dateFrom,dateTo)=>Promise.resolve({chatLogs:mockChatLogs}),getUserChatLogsByTokenPaged:requestBody=>Promise.resolve({chatLogs:mockChatLogs,totalItems:mockChatLogs.length})}},mockChatLogs=[{chatLogID:"chat123456",memoriID:"mem123",sessionID:"session123",timestamp:"2023-01-01T10:00:00Z",lines:[{text:"Hello, how can I help?",inbound:!0,timestamp:"2023-01-01T10:00:00Z",contextVars:{},media:[],memoryID:"mem123"},{text:"I need information about your services",inbound:!1,timestamp:"2023-01-01T10:01:00Z",contextVars:{},media:[],memoryID:"mem123"},{text:"We offer a range of services including consultation, implementation, and support.",inbound:!0,timestamp:"2023-01-01T10:02:00Z",contextVars:{},media:[],memoryID:"mem123"}],boardOfExperts:!1},{chatLogID:"chat456789",memoriID:"mem123",sessionID:"session123",timestamp:"2023-01-02T14:00:00Z",lines:[{text:"What are your business hours?",inbound:!1,timestamp:"2023-01-02T14:00:00Z",contextVars:{},media:[],memoryID:"mem123"},{text:"We are open from 9 AM to 5 PM weekdays.",inbound:!0,timestamp:"2023-01-02T14:01:00Z",contextVars:{},media:[],memoryID:"mem123"}],boardOfExperts:!0},{chatLogID:"chat789012",memoriID:"mem123",sessionID:"session123",timestamp:"2023-01-03T11:00:00Z",lines:[{text:"Do you offer remote services?",inbound:!1,timestamp:"2023-01-03T11:00:00Z",contextVars:{},media:[],memoryID:"mem123"},{text:"Yes, we offer both in-person and remote services to accommodate your needs.",inbound:!0,timestamp:"2023-01-03T11:01:00Z",contextVars:{},media:[],memoryID:"mem123"}],boardOfExperts:!1},{chatLogID:"chat345678",memoriID:"mem123",sessionID:"session1234",timestamp:"2023-01-04T09:30:00Z",lines:[{text:"What is your pricing structure?",inbound:!1,timestamp:"2023-01-04T09:30:00Z",contextVars:{},media:[],memoryID:"mem123"},{text:"Our pricing is based on project scope. We offer packages starting at $499 for basic services, with custom quotes for larger projects.",inbound:!0,timestamp:"2023-01-04T09:31:00Z",contextVars:{},media:[],memoryID:"mem123"},{text:"Do you offer any discounts?",inbound:!1,timestamp:"2023-01-04T09:32:00Z",contextVars:{},media:[],memoryID:"mem123"},{text:"Yes, we offer discounts for non-profits and educational institutions. We also have loyalty programs for returning customers.",inbound:!0,timestamp:"2023-01-04T09:33:00Z",contextVars:{},media:[],memoryID:"mem123"}],boardOfExperts:!1}],mockParams={open:!0,sessionId:"session12345",memori:{memoriID:"mem123",name:"Test Memori",avatar:{url:"https://example.com/avatar.jpg"},description:"A test memori",isPublic:!0,integrationEnabled:!1,enableBoardOfExperts:!0,memoriConfigurationID:"mem123",privacyType:"PUBLIC",voiceType:"FEMALE"},apiClient:mockApiClient,onClose:()=>console.log("Close button clicked"),history:mockChatLogs.map(chatLog=>({text:chatLog.lines[0].text,fromUser:chatLog.lines[0].inbound,timestamp:chatLog.lines[0].timestamp})),resumeSession:chatLog=>{console.log("Resume session called with:",chatLog)},loginToken:"mock-login-token",language:"EN",userLang:"EN"},__WEBPACK_DEFAULT_EXPORT__={title:"Widget/Chat History Drawer",component:_ChatHistory__WEBPACK_IMPORTED_MODULE_1__.A,decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_I18nWrapper__WEBPACK_IMPORTED_MODULE_2__.A,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Story,{})})],parameters:{layout:"fullscreen"},args:mockParams,argTypes:{open:{control:"boolean",description:"Whether the drawer is open"},onClose:{action:"closed"},resumeSession:{action:"resumed session"}}},Default={args:{}},WithSelectedChat={args:{},play:async({canvasElement})=>{const canvas=canvasElement.ownerDocument.body;setTimeout(()=>{const chatCard=canvas.querySelector(".memori-chat-history-drawer--card");chatCard&&chatCard.click()},300)}},EmptyState={args:{apiClient:{chatLogs:{getUserChatLogsByToken:(loginToken,memoriID,dateFrom,dateTo)=>Promise.resolve({chatLogs:[]}),getUserChatLogsByTokenPaged:requestBody=>Promise.resolve({chatLogs:[],totalItems:0})}}}},LoadingState={args:{apiClient:{chatLogs:{getUserChatLogsByToken:(loginToken,memoriID,dateFrom,dateTo)=>new Promise(resolve=>{setTimeout(()=>{resolve({chatLogs:mockChatLogs})},2e3)}),getUserChatLogsByTokenPaged:requestBody=>new Promise(resolve=>{setTimeout(()=>{resolve({chatLogs:mockChatLogs,totalItems:mockChatLogs.length})},2e3)})}}}},WithSearch={args:{},play:async({canvasElement})=>{const canvas=canvasElement.ownerDocument.body;setTimeout(()=>{const searchInput=canvas.querySelector('input[type="text"]');searchInput&&(searchInput.value="pricing",searchInput.dispatchEvent(new Event("change",{bubbles:!0})))},300)}},WithPagination={args:{apiClient:{chatLogs:{getUserChatLogsByToken:(loginToken,memoriID,dateFrom,dateTo)=>{const manyLogs=Array.from({length:20},(_,i)=>({chatLogID:`chat${i}`,lines:[{text:`Question ${i}`,inbound:!1,timestamp:`2023-01-0${i%9+1}T10:00:00Z`,contextVars:{},media:[],memoryID:"mem123",sessionID:"session123"},{text:`Answer ${i}`,inbound:!0,timestamp:`2023-01-0${i%9+1}T10:01:00Z`,contextVars:{},media:[],memoryID:"memori.memoriID",sessionID:"session123"}],boardOfExperts:i%3==0}));return Promise.resolve({chatLogs:manyLogs})},getUserChatLogsByTokenPaged:requestBody=>{const manyLogs=Array.from({length:20},(_,i)=>({chatLogID:`chat${i}`,lines:[{text:`Question ${i}`,inbound:!1,timestamp:`2023-01-0${i%9+1}T10:00:00Z`,contextVars:{},media:[],memoryID:"mem123",sessionID:"session123"},{text:`Answer ${i}`,inbound:!0,timestamp:`2023-01-0${i%9+1}T10:01:00Z`,contextVars:{},media:[],memoryID:"memori.memoriID",sessionID:"session123"}],boardOfExperts:i%3==0}));return Promise.resolve({chatLogs:manyLogs,totalItems:20})}}}}},WithTranslation={args:{...mockParams,language:"EN",userLang:"IT",isMultilanguageEnabled:!0}},WithCurrentChatDisabled={args:{...mockParams,sessionId:"session1234"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},WithSelectedChat.parameters={...WithSelectedChat.parameters,docs:{...WithSelectedChat.parameters?.docs,source:{originalSource:"{\n  args: {},\n  play: async ({\n    canvasElement\n  }) => {\n    // We need to use the play function to simulate clicking on a chat\n    const canvas = canvasElement.ownerDocument.body;\n    setTimeout(() => {\n      const chatCard = canvas.querySelector('.memori-chat-history-drawer--card');\n      if (chatCard) {\n        (chatCard as HTMLElement).click();\n      }\n    }, 300);\n  }\n}",...WithSelectedChat.parameters?.docs?.source}}},EmptyState.parameters={...EmptyState.parameters,docs:{...EmptyState.parameters?.docs,source:{originalSource:"{\n  args: {\n    apiClient: {\n      chatLogs: {\n        getUserChatLogsByToken: (loginToken: string, memoriID: string, dateFrom: string, dateTo: string) => Promise.resolve({\n          chatLogs: []\n        }),\n        getUserChatLogsByTokenPaged: (requestBody: any) => Promise.resolve({\n          chatLogs: [],\n          totalItems: 0\n        })\n      }\n    } as any\n  }\n}",...EmptyState.parameters?.docs?.source}}},LoadingState.parameters={...LoadingState.parameters,docs:{...LoadingState.parameters?.docs,source:{originalSource:"{\n  args: {\n    apiClient: {\n      chatLogs: {\n        getUserChatLogsByToken: (loginToken: string, memoriID: string, dateFrom: string, dateTo: string) => new Promise(resolve => {\n          // Simulate a slow network\n          setTimeout(() => {\n            resolve({\n              chatLogs: mockChatLogs\n            });\n          }, 2000);\n        }),\n        getUserChatLogsByTokenPaged: (requestBody: any) => new Promise(resolve => {\n          // Simulate a slow network\n          setTimeout(() => {\n            resolve({\n              chatLogs: mockChatLogs,\n              totalItems: mockChatLogs.length\n            });\n          }, 2000);\n        })\n      }\n    } as any\n  }\n}",...LoadingState.parameters?.docs?.source}}},WithSearch.parameters={...WithSearch.parameters,docs:{...WithSearch.parameters?.docs,source:{originalSource:"{\n  args: {},\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = canvasElement.ownerDocument.body;\n    setTimeout(() => {\n      const searchInput = canvas.querySelector('input[type=\"text\"]');\n      if (searchInput) {\n        (searchInput as HTMLInputElement).value = 'pricing';\n        (searchInput as HTMLInputElement).dispatchEvent(new Event('change', {\n          bubbles: true\n        }));\n      }\n    }, 300);\n  }\n}",...WithSearch.parameters?.docs?.source}}},WithPagination.parameters={...WithPagination.parameters,docs:{...WithPagination.parameters?.docs,source:{originalSource:"{\n  args: {\n    apiClient: {\n      chatLogs: {\n        getUserChatLogsByToken: (loginToken: string, memoriID: string, dateFrom: string, dateTo: string) => {\n          // Create 20 mock chat logs to trigger pagination\n          const manyLogs = Array.from({\n            length: 20\n          }, (_, i) => ({\n            chatLogID: `chat${i}`,\n            lines: [{\n              text: `Question ${i}`,\n              inbound: false,\n              timestamp: `2023-01-0${i % 9 + 1}T10:00:00Z`,\n              contextVars: {},\n              media: [],\n              memoryID: 'mem123',\n              sessionID: 'session123'\n            }, {\n              text: `Answer ${i}`,\n              inbound: true,\n              timestamp: `2023-01-0${i % 9 + 1}T10:01:00Z`,\n              contextVars: {},\n              media: [],\n              memoryID: 'memori.memoriID',\n              sessionID: 'session123'\n            }],\n            boardOfExperts: i % 3 === 0\n          }));\n          return Promise.resolve({\n            chatLogs: manyLogs\n          });\n        },\n        getUserChatLogsByTokenPaged: (requestBody: any) => {\n          // Create 20 mock chat logs to trigger pagination\n          const manyLogs = Array.from({\n            length: 20\n          }, (_, i) => ({\n            chatLogID: `chat${i}`,\n            lines: [{\n              text: `Question ${i}`,\n              inbound: false,\n              timestamp: `2023-01-0${i % 9 + 1}T10:00:00Z`,\n              contextVars: {},\n              media: [],\n              memoryID: 'mem123',\n              sessionID: 'session123'\n            }, {\n              text: `Answer ${i}`,\n              inbound: true,\n              timestamp: `2023-01-0${i % 9 + 1}T10:01:00Z`,\n              contextVars: {},\n              media: [],\n              memoryID: 'memori.memoriID',\n              sessionID: 'session123'\n            }],\n            boardOfExperts: i % 3 === 0\n          }));\n          return Promise.resolve({\n            chatLogs: manyLogs,\n            totalItems: 20\n          });\n        }\n      }\n    } as any\n  }\n}",...WithPagination.parameters?.docs?.source}}},WithTranslation.parameters={...WithTranslation.parameters,docs:{...WithTranslation.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...mockParams,\n    language: 'EN',\n    userLang: 'IT',\n    isMultilanguageEnabled: true\n  }\n}",...WithTranslation.parameters?.docs?.source}}},WithCurrentChatDisabled.parameters={...WithCurrentChatDisabled.parameters,docs:{...WithCurrentChatDisabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...mockParams,\n    sessionId: 'session1234'\n  }\n}",...WithCurrentChatDisabled.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithSelectedChat","EmptyState","LoadingState","WithSearch","WithPagination","WithTranslation","WithCurrentChatDisabled"]},"./src/components/icons/Loading.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Loading=({className,title,loading=!0})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("svg",{...title?{}:{"aria-hidden":"true"},xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024",focusable:"false",role:"img",className:classnames__WEBPACK_IMPORTED_MODULE_1___default()(className,{"memori-loading-icon":loading}),"aria-label":title,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("path",{d:"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"})});Loading.displayName="Loading";const __WEBPACK_DEFAULT_EXPORT__=Loading;try{Loading.displayName="Loading",Loading.__docgenInfo={description:"",displayName:"Loading",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},loading:{defaultValue:{value:"true"},description:"",name:"loading",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/icons/Loading.tsx#Loading"]={docgenInfo:Loading.__docgenInfo,name:"Loading",path:"src/components/icons/Loading.tsx#Loading"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/icons/Message.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Message=({className,title})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg",{...title?{}:{"aria-hidden":"true"},xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024",focusable:"false",role:"img",className,"aria-label":title,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path",{d:"M464 512a48 48 0 1096 0 48 48 0 10-96 0zm200 0a48 48 0 1096 0 48 48 0 10-96 0zm-400 0a48 48 0 1096 0 48 48 0 10-96 0zm661.2-173.6c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 00-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 00-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 00112 714v152a46 46 0 0046 46h152.1A449.4 449.4 0 00510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 00142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z"})});Message.displayName="Message";const __WEBPACK_DEFAULT_EXPORT__=Message;try{Message.displayName="Message",Message.__docgenInfo={description:"",displayName:"Message",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/icons/Message.tsx#Message"]={docgenInfo:Message.__docgenInfo,name:"Message",path:"src/components/icons/Message.tsx#Message"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/icons/SelectIcon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const SelectIcon=({className,title})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg",{...title?{}:{"aria-hidden":"true"},xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",focusable:"false",role:"img",className,fill:"currentColor","aria-label":title,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path",{fillRule:"evenodd",d:"M10 3a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02L10 4.852 7.3 7.76a.75.75 0 01-1.1-1.02l3.25-3.5A.75.75 0 0110 3zm-3.76 9.2a.75.75 0 011.06.04l2.7 2.908 2.7-2.908a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 01.04-1.06z",clipRule:"evenodd"})});SelectIcon.displayName="SelectIcon";const __WEBPACK_DEFAULT_EXPORT__=SelectIcon;try{SelectIcon.displayName="SelectIcon",SelectIcon.__docgenInfo={description:"",displayName:"SelectIcon",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/icons/SelectIcon.tsx#SelectIcon"]={docgenInfo:SelectIcon.__docgenInfo,name:"SelectIcon",path:"src/components/icons/SelectIcon.tsx#SelectIcon"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/ui/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_icons_Loading__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/icons/Loading.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=({primary=!1,outlined=!1,ghost=!1,padded=!0,shape="rounded",danger=!1,loading=!1,disabled=!1,block=!1,icon,className,title,id,htmlType,onClick,onMouseDown,onMouseUp,onMouseLeave,onTouchStart,onTouchEnd,children,isActive})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("button",{id,type:htmlType,onClick,onMouseDown,onMouseUp,onMouseLeave,onTouchStart,onTouchEnd,title,disabled:loading||disabled,className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("memori-button",{"memori-button--primary":primary,"memori-button--outlined":outlined,"memori-button--ghost":ghost,"memori-button--square":"square"===shape,"memori-button--rounded":"rounded"===shape,"memori-button--circle":"circle"===shape,"memori-button--padded":padded,"memori-button--block":block,"memori-button--with-icon":(icon||loading)&&children,"memori-button--icon-only":(icon||loading)&&!children,"memori-button--danger":danger,"memori-button--loading":loading,"memori-button--active":isActive},className),children:[icon&&!loading&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span",{className:"memori-button--icon",children:icon}),loading&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span",{className:"memori-button--icon loading-icon",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_icons_Loading__WEBPACK_IMPORTED_MODULE_2__.default,{loading:!0})}),children]});Button.displayName="Button";const __WEBPACK_DEFAULT_EXPORT__=Button;try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{primary:{defaultValue:{value:"false"},description:"",name:"primary",required:!1,type:{name:"boolean"}},outlined:{defaultValue:{value:"false"},description:"",name:"outlined",required:!1,type:{name:"boolean"}},ghost:{defaultValue:{value:"false"},description:"",name:"ghost",required:!1,type:{name:"boolean"}},padded:{defaultValue:{value:"true"},description:"",name:"padded",required:!1,type:{name:"boolean"}},block:{defaultValue:{value:"false"},description:"",name:"block",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"ReactNode"}},shape:{defaultValue:{value:"rounded"},description:"",name:"shape",required:!1,type:{name:"enum",value:[{value:'"square"'},{value:'"rounded"'},{value:'"circle"'}]}},danger:{defaultValue:{value:"false"},description:"",name:"danger",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"",name:"loading",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},isActive:{defaultValue:null,description:"",name:"isActive",required:!1,type:{name:"boolean"}},htmlType:{defaultValue:null,description:"",name:"htmlType",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((event: TouchEvent<HTMLButtonElement> | MouseEvent<Element, MouseEvent>) => void)"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((event: TouchEvent<HTMLButtonElement> | MouseEvent<Element, MouseEvent>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ui/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/ui/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}}}]);