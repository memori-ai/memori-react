"use strict";(self.webpackChunk_memori_ai_memori_react=self.webpackChunk_memori_ai_memori_react||[]).push([[1314],{"./src/components/Header/Header.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,ForBoardOfExperts:()=>ForBoardOfExperts,ForBoardOfExpertsAndOngoingChat:()=>ForBoardOfExpertsAndOngoingChat,SpeakerMuted:()=>SpeakerMuted,WithClear:()=>WithClear,WithDeepThoughtEnabled:()=>WithDeepThoughtEnabled,WithDeepThoughtEnabledAndOngoingChat:()=>WithDeepThoughtEnabledAndOngoingChat,WithLogin:()=>WithLogin,WithOngoingChat:()=>WithOngoingChat,WithPosition:()=>WithPosition,WithSettings:()=>WithSettings,WithShare:()=>WithShare,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Header_stories});var react=__webpack_require__("./node_modules/react/index.js"),data=__webpack_require__("./src/mocks/data.ts"),I18nWrapper=__webpack_require__("./src/I18nWrapper.tsx"),Header=__webpack_require__("./src/components/Header/Header.tsx"),SettingsDrawer=__webpack_require__("./src/components/SettingsDrawer/SettingsDrawer.tsx"),LoginDrawer=__webpack_require__("./src/components/LoginDrawer/LoginDrawer.tsx"),injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),Header_Header=__webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./src/components/Header/Header.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(Header_Header.Z,options);Header_Header.Z&&Header_Header.Z.locals&&Header_Header.Z.locals;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Header_stories={title:"Widget/Header",component:Header.Z,argTypes:{showShare:{control:{type:"boolean"}}},parameters:{controls:{expanded:!0}}},Template=args=>{const[speakerMuted,setSpeakerMuted]=react.useState(args.speakerMuted),[showSettingsDrawer,setShowSettingsDrawer]=react.useState(!1),[showKnownFactsDrawer,setShowKnownFactsDrawer]=react.useState(!1),[showExpertsDrawer,setShowExpertsDrawer]=react.useState(!1),[continuousSpeech,setContinuousSpeech]=react.useState(!0),[continuousSpeechTimeout,setContinuousSpeechTimeout]=react.useState(2),[showLoginDrawer,setShowLoginDrawer]=react.useState(!1);return(0,jsx_runtime.jsxs)(I18nWrapper.Z,{children:[(0,jsx_runtime.jsx)(Header.Z,{...args,speakerMuted,setSpeakerMuted,showSettings:!0,setShowSettingsDrawer:()=>setShowSettingsDrawer(!0),setShowKnownFactsDrawer:()=>setShowKnownFactsDrawer(!0),setShowExpertsDrawer:()=>setShowExpertsDrawer(!0),setShowLoginDrawer:()=>setShowLoginDrawer(!0)}),(0,jsx_runtime.jsx)(SettingsDrawer.Z,{open:!!showSettingsDrawer,onClose:()=>setShowSettingsDrawer(!1),microphoneMode:"HOLD_TO_TALK",setMicrophoneMode:()=>{},continuousSpeechTimeout:2,setContinuousSpeechTimeout:()=>{},controlsPosition:"bottom",setControlsPosition:()=>{},hideEmissions:!1,setHideEmissions:()=>{}}),(0,jsx_runtime.jsx)(LoginDrawer.Z,{tenant:data.cm,open:!!showLoginDrawer,onClose:()=>setShowLoginDrawer(!1),onLogin:(user,token)=>{console.log(user,token),setShowLoginDrawer(!1)},onLogout:()=>setShowLoginDrawer(!1),apiUrl:"https://backend.memori.ai"})]})};Template.displayName="Template";const Default=Template.bind({});Default.args={memori:data.jF,history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!1,showShare:!1,showSettings:!1};const WithPosition=Template.bind({});WithPosition.args={memori:{...data.jF,needsPosition:!0},history:data.m8,position:{placeName:"Berlin",latitude:52.520008,longitude:13.404954},setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!1,showShare:!1,showSettings:!1};const SpeakerMuted=Template.bind({});SpeakerMuted.args={memori:data.jF,history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!0,hasUserActivatedSpeak:!1,showShare:!1,showSettings:!1};const WithShare=Template.bind({});WithShare.args={memori:data.jF,history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!1,showShare:!0,showSettings:!1};const WithSettings=Template.bind({});WithSettings.args={memori:data.jF,history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!1,showShare:!1,showSettings:!0};const WithClear=Template.bind({});WithClear.args={memori:data.jF,history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!1,showShare:!1,showSettings:!1,showClear:!0};const WithOngoingChat=Template.bind({});WithOngoingChat.args={memori:data.jF,history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!0,showShare:!1,showSettings:!1};const WithDeepThoughtEnabled=Template.bind({});WithDeepThoughtEnabled.args={memori:{...data.jF,enableDeepThought:!0},history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!1,showShare:!1,showSettings:!1,loginToken:"abcd"};const WithDeepThoughtEnabledAndOngoingChat=Template.bind({});WithDeepThoughtEnabledAndOngoingChat.args={memori:{...data.jF,enableDeepThought:!0},history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!0,showShare:!1,showSettings:!1,sessionID:"1234",loginToken:"abcd"};const ForBoardOfExperts=Template.bind({});ForBoardOfExperts.args={memori:{...data.jF,enableBoardOfExperts:!0},history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},showExperts:!0,clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!1,showShare:!1,showSettings:!1,loginToken:"abcd"};const ForBoardOfExpertsAndOngoingChat=Template.bind({});ForBoardOfExpertsAndOngoingChat.args={memori:{...data.jF,enableBoardOfExperts:!0},history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},showExperts:!0,clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!0,showShare:!1,showSettings:!1,sessionID:"1234",loginToken:"abcd"};const WithLogin=Template.bind({});WithLogin.args={memori:data.jF,history:data.m8,setShowPositionDrawer:()=>{},setShowSettingsDrawer:()=>{},clearHistory:()=>{},speakerMuted:!1,hasUserActivatedSpeak:!1,showLogin:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...Default.parameters?.docs?.source}}},WithPosition.parameters={...WithPosition.parameters,docs:{...WithPosition.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...WithPosition.parameters?.docs?.source}}},SpeakerMuted.parameters={...SpeakerMuted.parameters,docs:{...SpeakerMuted.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...SpeakerMuted.parameters?.docs?.source}}},WithShare.parameters={...WithShare.parameters,docs:{...WithShare.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...WithShare.parameters?.docs?.source}}},WithSettings.parameters={...WithSettings.parameters,docs:{...WithSettings.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...WithSettings.parameters?.docs?.source}}},WithClear.parameters={...WithClear.parameters,docs:{...WithClear.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...WithClear.parameters?.docs?.source}}},WithOngoingChat.parameters={...WithOngoingChat.parameters,docs:{...WithOngoingChat.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...WithOngoingChat.parameters?.docs?.source}}},WithDeepThoughtEnabled.parameters={...WithDeepThoughtEnabled.parameters,docs:{...WithDeepThoughtEnabled.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...WithDeepThoughtEnabled.parameters?.docs?.source}}},WithDeepThoughtEnabledAndOngoingChat.parameters={...WithDeepThoughtEnabledAndOngoingChat.parameters,docs:{...WithDeepThoughtEnabledAndOngoingChat.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...WithDeepThoughtEnabledAndOngoingChat.parameters?.docs?.source}}},ForBoardOfExperts.parameters={...ForBoardOfExperts.parameters,docs:{...ForBoardOfExperts.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...ForBoardOfExperts.parameters?.docs?.source}}},ForBoardOfExpertsAndOngoingChat.parameters={...ForBoardOfExpertsAndOngoingChat.parameters,docs:{...ForBoardOfExpertsAndOngoingChat.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...ForBoardOfExpertsAndOngoingChat.parameters?.docs?.source}}},WithLogin.parameters={...WithLogin.parameters,docs:{...WithLogin.parameters?.docs,source:{originalSource:'args => {\n  const [speakerMuted, setSpeakerMuted] = React.useState(args.speakerMuted);\n  const [showSettingsDrawer, setShowSettingsDrawer] = React.useState(false);\n  const [showKnownFactsDrawer, setShowKnownFactsDrawer] = React.useState(false);\n  const [showExpertsDrawer, setShowExpertsDrawer] = React.useState(false);\n  const [continuousSpeech, setContinuousSpeech] = React.useState(true);\n  const [continuousSpeechTimeout, setContinuousSpeechTimeout] = React.useState(2);\n  const [showLoginDrawer, setShowLoginDrawer] = React.useState(false);\n  return <I18nWrapper>\n      <Header {...args} speakerMuted={speakerMuted} setSpeakerMuted={setSpeakerMuted} showSettings setShowSettingsDrawer={() => setShowSettingsDrawer(true)} setShowKnownFactsDrawer={() => setShowKnownFactsDrawer(true)} setShowExpertsDrawer={() => setShowExpertsDrawer(true)} setShowLoginDrawer={() => setShowLoginDrawer(true)} />\n      <SettingsDrawer open={!!showSettingsDrawer} onClose={() => setShowSettingsDrawer(false)} microphoneMode="HOLD_TO_TALK" setMicrophoneMode={() => {}} continuousSpeechTimeout={2} setContinuousSpeechTimeout={() => {}} controlsPosition="bottom" setControlsPosition={() => {}} hideEmissions={false} setHideEmissions={() => {}} />\n      <LoginDrawer tenant={tenant} open={!!showLoginDrawer} onClose={() => setShowLoginDrawer(false)} onLogin={(user, token) => {\n      console.log(user, token);\n      setShowLoginDrawer(false);\n    }} onLogout={() => setShowLoginDrawer(false)} apiUrl="https://backend.memori.ai" />\n    </I18nWrapper>;\n}',...WithLogin.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithPosition","SpeakerMuted","WithShare","WithSettings","WithClear","WithOngoingChat","WithDeepThoughtEnabled","WithDeepThoughtEnabledAndOngoingChat","ForBoardOfExperts","ForBoardOfExpertsAndOngoingChat","WithLogin"]},"./src/I18nWrapper.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_i18next__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-i18next/dist/es/I18nextProvider.js"),_i18n__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/i18n.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const I18nWrapper=({children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_i18next__WEBPACK_IMPORTED_MODULE_3__.a,{i18n:_i18n__WEBPACK_IMPORTED_MODULE_1__.Z,children});I18nWrapper.displayName="I18nWrapper";const __WEBPACK_DEFAULT_EXPORT__=I18nWrapper;try{I18nWrapper.displayName="I18nWrapper",I18nWrapper.__docgenInfo={description:"",displayName:"I18nWrapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/I18nWrapper.tsx#I18nWrapper"]={docgenInfo:I18nWrapper.__docgenInfo,name:"I18nWrapper",path:"src/I18nWrapper.tsx#I18nWrapper"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/icons/Close.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Close=({className,title})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("svg",{...title?{}:{"aria-hidden":"true"},xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024",focusable:"false",role:"img",className,"aria-label":title,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("path",{d:"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 0 0 203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"})});Close.displayName="Close";const __WEBPACK_DEFAULT_EXPORT__=Close;try{Close.displayName="Close",Close.__docgenInfo={description:"",displayName:"Close",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/icons/Close.tsx#Close"]={docgenInfo:Close.__docgenInfo,name:"Close",path:"src/components/icons/Close.tsx#Close"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/icons/Loading.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Loading=({className,title,loading=!0})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("svg",{...title?{}:{"aria-hidden":"true"},xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 1024 1024",focusable:"false",role:"img",className:classnames__WEBPACK_IMPORTED_MODULE_1___default()(className,{"memori-loading-icon":loading}),"aria-label":title,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("path",{d:"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z"})});Loading.displayName="Loading";const __WEBPACK_DEFAULT_EXPORT__=Loading;try{Loading.displayName="Loading",Loading.__docgenInfo={description:"",displayName:"Loading",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},loading:{defaultValue:{value:"true"},description:"",name:"loading",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/icons/Loading.tsx#Loading"]={docgenInfo:Loading.__docgenInfo,name:"Loading",path:"src/components/icons/Loading.tsx#Loading"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/ui/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_icons_Loading__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/icons/Loading.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=({primary=!1,outlined=!1,ghost=!1,padded=!0,shape="rounded",danger=!1,loading=!1,disabled=!1,block=!1,icon,className,title,id,htmlType,onClick,onMouseDown,onMouseUp,onMouseLeave,onTouchStart,onTouchEnd,children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("button",{id,type:htmlType,onClick,onMouseDown,onMouseUp,onMouseLeave,onTouchStart,onTouchEnd,title,disabled:loading||disabled,className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("memori-button",{"memori-button--primary":primary,"memori-button--outlined":outlined,"memori-button--ghost":ghost,"memori-button--square":"square"===shape,"memori-button--rounded":"rounded"===shape,"memori-button--circle":"circle"===shape,"memori-button--padded":padded,"memori-button--block":block,"memori-button--with-icon":(icon||loading)&&children,"memori-button--icon-only":(icon||loading)&&!children,"memori-button--danger":danger,"memori-button--loading":loading},className),children:[icon&&!loading&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span",{className:"memori-button--icon",children:icon}),loading&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span",{className:"memori-button--icon loading-icon",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_icons_Loading__WEBPACK_IMPORTED_MODULE_2__.default,{loading:!0})}),children]});Button.displayName="Button";const __WEBPACK_DEFAULT_EXPORT__=Button;try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{primary:{defaultValue:{value:"false"},description:"",name:"primary",required:!1,type:{name:"boolean"}},outlined:{defaultValue:{value:"false"},description:"",name:"outlined",required:!1,type:{name:"boolean"}},ghost:{defaultValue:{value:"false"},description:"",name:"ghost",required:!1,type:{name:"boolean"}},padded:{defaultValue:{value:"true"},description:"",name:"padded",required:!1,type:{name:"boolean"}},block:{defaultValue:{value:"false"},description:"",name:"block",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"",name:"icon",required:!1,type:{name:"ReactNode"}},shape:{defaultValue:{value:"rounded"},description:"",name:"shape",required:!1,type:{name:"enum",value:[{value:'"square"'},{value:'"rounded"'},{value:'"circle"'}]}},danger:{defaultValue:{value:"false"},description:"",name:"danger",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:"",name:"loading",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},htmlType:{defaultValue:null,description:"",name:"htmlType",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((event: TouchEvent<HTMLButtonElement> | MouseEvent<Element, MouseEvent>) => void)"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((event: TouchEvent<HTMLButtonElement> | MouseEvent<Element, MouseEvent>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ui/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/ui/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/ui/Spin.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_icons_Loading__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/icons/Loading.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Spin=({spinning=!1,primary=!1,className,children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("memori-spin",className,{"memori-spin--spinning":spinning,"memori-spin--primary":primary}),children:[children,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"memori-spin--spinner",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_icons_Loading__WEBPACK_IMPORTED_MODULE_2__.default,{loading:!0})})]});Spin.displayName="Spin";const __WEBPACK_DEFAULT_EXPORT__=Spin;try{Spin.displayName="Spin",Spin.__docgenInfo={description:"",displayName:"Spin",props:{spinning:{defaultValue:{value:"false"},description:"",name:"spinning",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},primary:{defaultValue:{value:"false"},description:"",name:"primary",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ui/Spin.tsx#Spin"]={docgenInfo:Spin.__docgenInfo,name:"Spin",path:"src/components/ui/Spin.tsx#Spin"})}catch(__react_docgen_typescript_loader_error){}},"./src/mocks/data.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A3:()=>expertReference,EA:()=>user,Eu:()=>historyWithMedia,Fr:()=>venue,Gs:()=>dialogState,I_:()=>historyWithAIGeneratedMessages,JZ:()=>knownFact,M9:()=>sessionID,WM:()=>integration,cm:()=>tenant,jF:()=>memori,m8:()=>history});const sessionID="131165be-9d1a-42fb-a3ce-e8f86d40c88f",tenant={adminCount:3,config:{name:"AIsuru",requirePosition:!1,showNewUser:!0},creationTimestamp:"2023-05-31T14:32:48.885287Z",description:"AIsuru",disableRegistration:!1,id:"www.aisuru.com",lastChangeTimestamp:"2023-05-31T14:32:48.885287Z",logoURL:"https://aisuru.com/images/twincreator/logo.png",maxAdmins:0,maxCompletions:0,maxCompletionsPerUser:0,maxFreeSessions:400,maxFreeSessionsPerUser:100,maxMemoriPerAdmin:0,maxMemoriPerUser:3,maxTotalMemori:0,maxUsers:0,memoriCount:0,name:"www.aisuru.com",nonFreeSessionCost:.02,paying:!0,tenantID:"96caa4b4-31a4-48e5-8163-dec61869a2a7",theme:"aisuru",userCount:0},user={tenant:"localhost:3000",userID:"97c42d18-ffe4-47e1-a3c7-e42729f1e6a3",userName:"nzambello",eMail:"nicola@nzambello.dev",admin:!1,maxMemori:0,enableMemoriCreation:!0,enableBoardOfExperts:!0,maxFreeSessions:0,tnCAndPPAccepted:!0,tnCAndPPAcceptanceDate:"2021-03-01T00:00:00.000Z",pAndCUAccepted:!0,pAndCUAcceptanceDate:"2021-03-01T00:00:00.000Z",birthDate:"1900-03-01T00:00:00.000Z",age:28},memori={memoriID:"25ced51c-3520-41af-8bbe-222d861b8e32",engineMemoriID:"66b4e161-2431-4b21-9b70-d8c27de730ca",name:"Memori",memoriConfigurationID:"MemoriCloud-it_IT",description:"Lorem ipsum.",voiceType:"male",isGiver:!0,isReceiver:!1,privacyType:"PUBLIC",needsPosition:!1,culture:"it-IT",categories:[],publishedInTheMetaverse:!0,exposed:!0,enableCompletions:!0,nsfw:!1,ageRestriction:14,contentQualityIndex:66.6,contentQualityIndexTimestamp:"2021-03-01T12:00:00.000Z",ownerUserName:"username",ownerTenantName:"aisuru.com",ownerUserID:"97c42d18-ffe4-47e1-a3c7-e42729f1e6a3",metaverseEnvironment:"synthwave",secretToken:"awanagana",giverPIN:"1234",giverTag:"🧑‍💻",avatarURL:"https://aisuru.com/images/twincreator/square_logo.png",coverURL:"https://aisuru.com/images/twincreator/og-image.png"},history=[{text:"Ciao, io sono test, c'è qualcosa che vorresti chiedermi?",timestamp:"2021-03-01T12:00:00.000Z"},{text:"Prova",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Mi dispiace, le mie risposte sono limitate. Devi farmi le domande giuste. C'è altro che vuoi sapere?",timestamp:"2021-03-01T12:00:00.000Z"},{text:"Come faccio a fare delle cose con questa cosa?",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Ecco qui come.",media:[{mediumID:"c6851968-5d4d-409a-ae75-f22ec077efcd",url:"https://memori.ai",mimeType:"text/html",title:"Link"}],timestamp:"2021-03-01T12:00:00.000Z",contextVars:{TEST:"test"}},{text:"Ah, grazie! Ciao!",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Arrivederci.",timestamp:"2021-03-01T12:00:00.000Z",contextVars:{TEST:"test"}}],historyWithMedia=[{text:"Ciao, io sono test, c'è qualcosa che vorresti chiedermi?",timestamp:"2021-03-01T12:00:00.000Z"},{text:"Prova",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Mi dispiace, le mie risposte sono limitate. Devi farmi le domande giuste. C'è altro che vuoi sapere?",timestamp:"2021-03-01T12:00:00.000Z"},{text:"Come faccio a fare delle cose con questa cosa?",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Ecco qui delle cose per te.",media:[{mediumID:"c6851968-5d4d-409a-ae75-f22ec077efcd",url:"https://memori.ai/en",mimeType:"text/html",title:"Link Memori Srl"},{mediumID:"c6851968-5d4d-409a-ae75-f22ec077efce",url:"https://rawmaterial.it/en",mimeType:"text/html",title:"Link RawMaterial"},{mediumID:"95226d7e-7bae-465e-8b80-995587bb5971",mimeType:"text/html",title:"Introducing Plone Remix | Vimeo",url:"https://vimeo.com/766468314"},{mediumID:"95226d7e-7bae-465e-8b80-995587bb5969",mimeType:"text/html",title:"A sustainable web: is it possible? - Nicola Zambello | YouTube",url:"https://www.youtube.com/watch?v=feH26j3rBz8"},...Array.from({length:3},((_,i)=>({mediumID:`95226d7e-7bae-465e-8b80-995587bb597${i}`,mimeType:"image/png",title:`Image ${i}`,url:`https://picsum.photos/${i%2?"200":"300"}/${i%3?"300":"200"}?random=${i}`})))],timestamp:"2021-03-01T12:00:00.000Z"},{text:"Ah, grazie! Ciao!",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Arrivederci.",timestamp:"2021-03-01T12:00:00.000Z"}],historyWithAIGeneratedMessages=[{text:"Ciao, io sono test, c'è qualcosa che vorresti chiedermi?",timestamp:"2021-03-01T12:00:00.000Z"},{text:"Prova",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Sa. Sa. Prova",timestamp:"2021-03-01T12:00:00.000Z"},{text:"Come faccio a fare delle cose con questa cosa?",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Ecco qui come.",media:[{mediumID:"c6851968-5d4d-409a-ae75-f22ec077efcd",url:"https://memori.ai",mimeType:"text/html",title:"Link"}],timestamp:"2021-03-01T12:00:00.000Z",generatedByAI:!0,contextVars:{TEST:"test"}},{text:"Ah, grazie! Ciao!",fromUser:!0,timestamp:"2021-03-01T12:00:00.000Z"},{text:"Arrivederci.",timestamp:"2021-03-01T12:00:00.000Z",contextVars:{TEST:"test"}}],dialogState={state:"R1",previousState:"I0",stateName:"WaitingForReceiverQuestion",confidence:1,knownTags:{"☠️":"test","😎":"Ciccio"},emission:"Ciao, io sono test, c'è qualcosa che vorresti chiedermi?",hints:["Va bene","No grazie"],media:[],acceptsTimeout:!0,acceptsAbort:!1,acceptsMedia:!1,acceptsDate:!1,acceptsPlace:!1,acceptsTag:!1,giverID:"c832e2dc-403c-4baf-a3b7-2374e100dbcf",contextVars:{}},integration={integrationID:"cb3c4776-7f0b-4f97-a773-c32a5d7a3bf1",memoriID:"25ced51c-3520-41af-8bbe-222d861b8e32",type:"LANDING_EXPERIENCE",state:"NEW",deviceEmails:[],customData:'{"textColor":"#2a2a2a","buttonBgColor":"#823ce1","buttonTextColor":"#ffffff","name":"Web","globalBackground":"https://assets.memori.ai/api/v2/asset/364e498c-11da-42d5-9e32-19e5d137d4b8.jpeg","blurBackground":true,"innerBgColor":"light","innerBgAlpha":0.8,"multilanguage":true,"avatar":"readyplayerme","avatarURL":"https://assets.memori.ai/api/v2/asset/b791f77c-1a94-4272-829e-eca82fcc62b7.glb#1669663599444"}',resources:[],publish:!0,creationTimestamp:"2022-06-11T14:13:45.685038Z",lastChangeTimestamp:"2022-06-11T14:13:45.685038Z"},knownFact={knownFactID:"b0b0b0b0-b0b0-b0b0-b0b0-b0b0b0b0b0b3",knownFactType:"ShortTerm",text:"I am a known fact. Quisque in ultrices lectus. Nulla at urna diam. Proin sodales lobortis libero eu facilisis.",creationTimestamp:"2023-12-01T13:40:25.235896Z",creationSessionID:"0ce713c0-c8f1-4aed-a2a6-40f81c06854f",lastChangeTimestamp:"2023-12-01T13:44:04.832072Z",lastChangeSessionID:"0ce713c0-c8f1-4aed-a2a6-40f81c06854f"},expertReference={expertID:"f016f204-c307-483b-8891-680a3c974c53",name:"TEST MEMORI",description:"lui è competente",default:!0,expertMemoriID:"dfc44f1c-1ba7-4e1e-a234-28aa8b6b3d32",expertBaseURL:"http://localhost:7778",creationTimestamp:"2023-12-01T13:40:25.235896Z",creationSessionID:"0ce713c0-c8f1-4aed-a2a6-40f81c06854f",lastChangeTimestamp:"2023-12-01T13:44:04.832072Z",lastChangeSessionID:"0ce713c0-c8f1-4aed-a2a6-40f81c06854f"},venue={latitude:44.66579,longitude:11.48823,placeName:"Altedo, Bologna, Italy",uncertainty:2}}}]);