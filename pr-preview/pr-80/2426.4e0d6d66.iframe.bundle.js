(self.webpackChunk_memori_ai_memori_react=self.webpackChunk_memori_ai_memori_react||[]).push([[2426],{"./node_modules/@memori.ai/memori-api-client/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>esm});var constants_namespaceObject={};__webpack_require__.r(constants_namespaceObject),__webpack_require__.d(constants_namespaceObject,{allowedMediaTypes:()=>allowedMediaTypes,anonTag:()=>anonTag});var browser_ponyfill=__webpack_require__("./node_modules/cross-fetch/dist/browser-ponyfill.js"),browser_ponyfill_default=__webpack_require__.n(browser_ponyfill);const apiFetcher=(path,opts)=>browser_ponyfill_default()(`${opts.apiUrl}${path}`,{...opts,body:(null==opts?void 0:opts.body)?JSON.stringify(opts.body):void 0,mode:"cors",credentials:"include",headers:{"Content-Type":"application/json",...null==opts?void 0:opts.headers}}).then(res=>(null==opts?void 0:opts.text)?res.text():res.json()),memori=apiUrl=>({getTenantPublicMemoriList:tenant=>apiFetcher(`/TenantPublicMemori/${encodeURIComponent(tenant)}`,{apiUrl}),getTenantMetaverseMemoriList:tenant=>apiFetcher(`/TenantMetaverseMemori/${encodeURIComponent(tenant)}`,{apiUrl}),getPublicMemoriList:authToken=>apiFetcher(`/PublicMemori/${authToken}`,{apiUrl}),getAllMemori:authToken=>apiFetcher(`/AllMemori/${authToken}`,{apiUrl}),getUserByIDMemoriList:(tenantName,userID,authToken)=>apiFetcher(`/UserMemoriByID/${tenantName}/${userID}${authToken?`/${authToken}`:""}`,{apiUrl}),getUserMemoriList:(tenantName,userName,authToken)=>apiFetcher(`/UserMemori/${tenantName}/${userName}${authToken?`/${authToken}`:""}`,{apiUrl}),getMemoriList:authToken=>apiFetcher(`/Memori/${authToken}`,{apiUrl}),getSharedMemoriList:authToken=>apiFetcher(`/SharedMemori/${authToken}`,{apiUrl}),getTenantCategories:tenant=>apiFetcher(`/TenantMemoriCategories/${encodeURIComponent(tenant)}`,{apiUrl}),getMemoriConfigs:authToken=>apiFetcher(`/MemoriConfigs/${authToken}`,{apiUrl}),createMemori:(authToken,memori)=>apiFetcher(`/Memori/${authToken}`,{apiUrl,body:memori,method:"POST"}),updateMemori:(authToken,memori)=>apiFetcher(`/Memori/${authToken}/${memori.memoriID}`,{apiUrl,body:memori,method:"PATCH"}),deleteMemori:(authToken,memori)=>apiFetcher(`/Memori/${authToken}`,{apiUrl,body:memori,method:"DELETE"}),getMemoriById:(authToken,memoriID)=>apiFetcher(`/Memori/${authToken}/${memoriID}`,{apiUrl}),getMemoriByUserAndId:(tenantName,userID,memoriID,authToken)=>apiFetcher(`/MemoriById/${tenantName}/${userID}/${memoriID}${authToken?`/${authToken}`:""}`,{apiUrl}),getMemori:(tenant,userName,memoriName,authToken)=>apiFetcher(`/Memori/${encodeURIComponent(tenant)}/${encodeURIComponent(userName)}/${encodeURIComponent(memoriName)}/${null!=authToken?authToken:""}`,{apiUrl}),getMemoriSessions:(authToken,memoriID,dateFrom,dateTo)=>apiFetcher(`/MemoriSessions/${authToken}/${memoriID}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{apiUrl}),transferMemori:(authToken,memori)=>apiFetcher(`/TransferMemori/${authToken}`,{apiUrl,body:memori,method:"POST"}),blockMemori:(authToken,memori)=>apiFetcher(`/MemoriBlock/${authToken}`,{apiUrl,body:memori,method:"POST"}),unblockMemori:(authToken,memori)=>apiFetcher(`/MemoriBlock/${authToken}`,{apiUrl,body:memori,method:"DELETE"}),getTenantPublicMemoriFiltered:(tenantName,filters)=>apiFetcher(`/TenantPublicMemoriFiltered/${encodeURIComponent(tenantName)}`,{apiUrl,body:filters,method:"POST"}),getPublicMemoriFiltered:(authToken,filters)=>apiFetcher(`/PublicMemoriFiltered/${authToken}`,{apiUrl,body:filters,method:"POST"}),getMemoriFiltered:(authToken,filters)=>apiFetcher(`/MemoriFiltered/${authToken}`,{apiUrl,body:filters,method:"POST"}),getSharedMemoriFiltered:(authToken,filters)=>apiFetcher(`/SharedMemoriFiltered/${authToken}`,{apiUrl,body:filters,method:"POST"}),getUserMemoriFiltered:(tenantName,userName,authToken,filters)=>apiFetcher(`/UserMemoriFiltered/${encodeURIComponent(tenantName)}/${encodeURIComponent(userName)}/${authToken}`,{apiUrl,body:filters,method:"POST"}),getUserMemoriByIDFiltered:(tenantName,userID,authToken,filters)=>apiFetcher(`/UserMemoriByIDFiltered/${encodeURIComponent(tenantName)}/${encodeURIComponent(userID)}/${authToken}`,{apiUrl,body:filters,method:"POST"}),getAllMemoriFiltered:(authToken,filters)=>apiFetcher(`/AllMemoriFiltered/${authToken}`,{apiUrl,body:filters,method:"POST"})}),user=apiUrl=>({userSignUp:user=>apiFetcher("/User",{apiUrl,body:user,method:"POST"}),userConfirmSignUp:user=>apiFetcher("/UserConfirm",{apiUrl,body:user,method:"POST"}),userLogin:user=>apiFetcher("/Login",{apiUrl,body:user,method:"POST"}),userLogout:authToken=>apiFetcher(`/Logout/${authToken}`,{apiUrl,method:"POST"}),getCurrentUser:authToken=>apiFetcher(`/User/${authToken}`,{apiUrl}),getUser:(authToken,userID)=>apiFetcher(`/User/${authToken}/${userID}`,{apiUrl}),getUsersList:authToken=>apiFetcher(`/Users/${authToken}`,{apiUrl}),getUsersListPaginated:(authToken,filters)=>apiFetcher(`/FilterUsers/${authToken}`,{apiUrl,body:filters,method:"POST"}),deleteUser:(authToken,userID)=>apiFetcher(`/User/${authToken}/${userID}`,{apiUrl,method:"DELETE"}),updateUser:(authToken,userID,user)=>apiFetcher(`/User/${authToken}/${userID}`,{apiUrl,method:"PATCH",body:user}),resetPassword:user=>apiFetcher("/ResetPassword",{apiUrl,body:user,method:"POST"}),resetConfirm:user=>apiFetcher("/ResetConfirm",{apiUrl,body:user,method:"POST"}),recoverUsername:user=>apiFetcher("/RecoverUsername",{apiUrl,body:user,method:"POST"}),resendVerificationCode:user=>apiFetcher("/ResendVerificationCode",{apiUrl,body:user,method:"POST"}),createUser:(authToken,user)=>apiFetcher(`/User/${authToken}`,{apiUrl,body:user,method:"POST"}),refreshTemporarySession:refreshTemporarySessionSpecs=>apiFetcher("/RefreshTemporarySession",{apiUrl,body:refreshTemporarySessionSpecs,method:"POST"})}),userPwl=apiUrl=>({pwlUserLogin:user=>apiFetcher("/PwlLogin",{apiUrl,body:{...user},method:"POST"}),pwlUserLogout:authToken=>apiFetcher(`/PwlLogout/${authToken}`,{apiUrl,method:"POST"}),pwlGetCurrentUser:authToken=>apiFetcher(`/PwlUser/${authToken}`,{apiUrl}),pwlGetUser:(authToken,userID)=>apiFetcher(`/PwlUser/${authToken}/${userID}`,{apiUrl}),pwlGetUsersList:authToken=>apiFetcher(`/PwlUsers/${authToken}`,{apiUrl}),pwlGetUsersListPaginated:(authToken,filters)=>apiFetcher(`/FilterPwlUsers/${authToken}`,{apiUrl,body:filters,method:"POST"}),pwlDeleteUser:(authToken,userID)=>apiFetcher(`/PwlUser/${authToken}/${userID}`,{apiUrl,method:"DELETE"}),pwlUpdateUser:(authToken,userID,user)=>apiFetcher(`/PwlUser/${authToken}/${userID}`,{apiUrl,method:"PATCH",body:user}),pwlRecoverUsername:user=>apiFetcher("/RecoverPwlUserName",{apiUrl,body:user,method:"POST"}),pwlCreateUser:(authToken,user)=>apiFetcher(`/PwlUser/${authToken}`,{apiUrl,body:user,method:"POST"}),pwlLoginWithJWT:(jwtToken,tenant,secretKey)=>apiFetcher("/LoginWithJWT",{apiUrl,body:{jwtToken,tenant},headers:{"X-Memori-Trusted-App":secretKey},method:"POST"}),loginWithOTP:user=>apiFetcher("/LoginWithOTP",{apiUrl,method:"POST",body:{...user}}),validateOTPCode:(otpCode,tenant,userName,eMail)=>apiFetcher("/ValidateOTPCode",{apiUrl,method:"POST",body:{userName,eMail,otpCode,tenant}})}),integration=apiUrl=>({getMemoriIntegrationsList:(authToken,memoriID)=>apiFetcher(`/Integrations/${authToken}/${memoriID}`,{apiUrl}),getAllIntegrationsList:authToken=>apiFetcher(`/AllIntegrations/${authToken}`,{apiUrl}),getIntegration:(authToken,integrationID)=>apiFetcher(`/Integration/${authToken}/${integrationID}`,{apiUrl}),deleteIntegration:(authToken,integrationID)=>apiFetcher(`/Integration/${authToken}/${integrationID}`,{apiUrl,method:"DELETE"}),createIntegration:(authToken,integration)=>apiFetcher(`/Integration/${authToken}`,{apiUrl,method:"POST",body:integration}),updateIntegration:(authToken,integrationID,integration)=>apiFetcher(`/Integration/${authToken}/${integrationID}`,{apiUrl,method:"PATCH",body:integration})}),asset=apiUrl=>({getUploadAssetURL:(authToken,memoriID,memoryID)=>`${apiUrl}/Asset/${authToken}${memoriID?`/${memoriID}`:""}${memoryID?`/${memoryID}`:""}`,uploadAsset:async(fileName,fileUrl,authToken,memoriID,memoryID)=>{const data=new FormData,file=await fetch(fileUrl),fileBlob=await file.blob();data.append(fileName,fileBlob,fileName);const upload=await fetch(`${apiUrl}/Asset/${authToken}${memoriID?`/${memoriID}`:""}${memoryID?`/${memoryID}`:""}`,{method:"POST",body:data});return await upload.json()},uploadAssetUnlogged:async(fileName,fileUrl,memoriID,sessionID)=>{const data=new FormData,file=await fetch(fileUrl),fileBlob=await file.blob();data.append(fileName,fileBlob,fileName);const upload=await fetch(`${apiUrl}/Asset/unlogged/${memoriID}/${sessionID}`,{method:"POST",body:data});return await upload.json()},getAsset:(fileName,sessionID)=>apiFetcher(`/Asset/${fileName}/${sessionID}`,{apiUrl,method:"GET"}),getAssetList:authToken=>apiFetcher(`/Assets/${authToken}`,{apiUrl,method:"GET"}),updateAsset:(authToken,assetURL,asset)=>apiFetcher(`/Asset/${authToken}/${assetURL.split("/").reverse()[0]}`,{apiUrl,method:"PATCH",body:asset}),deleteAsset:(authToken,assetURL)=>apiFetcher(`/Asset/${authToken}/${assetURL.split("/").reverse()[0]}`,{apiUrl,method:"DELETE"})}),invitation=apiUrl=>({getSentInvitations:authToken=>apiFetcher(`/SentInvitations/${authToken}`,{apiUrl}),getMemoriInvitations:(authToken,memoriId)=>apiFetcher(`/MemoriInvitations/${authToken}/${memoriId}`,{apiUrl}),getReceivedInvitations:authToken=>apiFetcher(`/ReceivedInvitations/${authToken}`,{apiUrl}),getAllInvitations:authToken=>apiFetcher(`/AllInvitations/${authToken}`,{apiUrl}),getInvitation:(authToken,invitationId)=>apiFetcher(`/Invitation/${authToken}/${invitationId}`,{apiUrl}),updateInvitation:(authToken,invitation)=>apiFetcher(`/Invitation/${authToken}/${invitation.invitationID}`,{apiUrl,method:"PATCH",body:invitation}),deleteInvitation:(authToken,invitationId)=>apiFetcher(`/Invitation/${authToken}/${invitationId}`,{apiUrl,method:"DELETE"}),acceptInvitation:(authToken,invitationId)=>apiFetcher(`/AcceptInvitation/${authToken}/${invitationId}`,{apiUrl,method:"POST"}),rejectInvitation:(authToken,invitationId)=>apiFetcher(`/RejectInvitation/${authToken}/${invitationId}`,{apiUrl,method:"POST"}),sendInvitation:(authToken,invitation)=>apiFetcher(`/SendInvitation/${authToken}`,{apiUrl,method:"POST",body:invitation})}),consumptionLogs=apiUrl=>({getTenantConsumptionLogs:(authToken,tenantID,type,dateFrom,dateTo)=>apiFetcher(`/TenantConsumptionLogs/${authToken}/${tenantID}/${type}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{apiUrl}),getUserConsumptionLogs:(authToken,userID,type,dateFrom,dateTo)=>apiFetcher(`/UserConsumptionLogs/${authToken}/${userID}/${type}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{apiUrl}),getMemoriConsumptionLogs:(authToken,memoriID,type,dateFrom,dateTo)=>apiFetcher(`/MemoriConsumptionLogs/${authToken}/${memoriID}/${type}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{apiUrl})}),notifications=apiUrl=>({getTenantNotifications:tenantID=>apiFetcher(`/TenantNotifications/${tenantID}`,{apiUrl}),getUserNotifications:authToken=>apiFetcher(`/UserNotifications/${authToken}`,{apiUrl}),getChangelogNotifications:tenant=>apiFetcher(`/ChangelogNotifications/${tenant}`,{apiUrl}),createNotification:(token,notificationData)=>apiFetcher(`/Notifications/${token}`,{apiUrl,method:"POST",body:notificationData}),getNotification:(token,notificationId)=>apiFetcher(`/Notifications/${token}/${notificationId}`,{apiUrl}),deleteNotification:(token,notificationId)=>apiFetcher(`/Notifications/${token}/${notificationId}`,{apiUrl,method:"DELETE"}),listAllNotifications:(token,filter="ACTIVE_AND_FUTURE")=>apiFetcher(`/ListAllNotifications/${token}/${filter}`,{apiUrl}),updateNotification:(token,notificationId,notificationData)=>apiFetcher(`/Notifications/${token}/${notificationId}`,{apiUrl,method:"PATCH",body:notificationData})}),importExport=apiUrl=>({importCSV:async(authToken,memoriID,rows,params)=>apiFetcher(`/ImportExport/ImportCSV/${authToken}/${memoriID}`,{apiUrl,method:"POST",body:{rows,...params}}),importTXT:async(authToken,memoriID,rows,params)=>apiFetcher(`/ImportExport/ImportTXT/${authToken}/${memoriID}`,{apiUrl,method:"POST",body:{rows,...params}}),importDictionary:async(authToken,memoriID,rows,params)=>apiFetcher(`/ImportExport/ImportDictionary/${authToken}/${memoriID}`,{apiUrl,method:"POST",body:{rows,...params}}),importFunctionsIntents:async(authToken,memoriID,rows,params)=>apiFetcher(`/ImportExport/ImportFunctionsIntents/${authToken}/${memoriID}`,{apiUrl,method:"POST",body:{rows,...params}}),importMemori:async(authToken,rows,params)=>apiFetcher(`/ImportExport/ImportMemori/${authToken}`,{apiUrl,method:"POST",body:{rows,...params}}),exportCSV:async(authToken,memoriID,csvSpecs,password)=>apiFetcher(`/ImportExport/ExportCSV/${authToken}/${memoriID}`,{apiUrl,method:"POST",body:{csvSpecs,password},text:!0}),exportJSONL:async(authToken,memoriID,jsonlSpecs,password)=>apiFetcher(`/ImportExport/ExportJSONL/${authToken}/${memoriID}`,{apiUrl,method:"POST",body:{jsonlSpecs,password},text:!0}),exportMemori:async(authToken,memoriID,password)=>(async(path,opts)=>{const responseType=(null==opts?void 0:opts.responseType)||"arrayBuffer";return browser_ponyfill_default()(`${opts.apiUrl}${path}`,{method:opts.method||"GET",body:(null==opts?void 0:opts.body)?JSON.stringify(opts.body):void 0,mode:"cors",credentials:"include",headers:{"Content-Type":"application/json",Accept:"application/octet-stream, application/zip",...null==opts?void 0:opts.headers}}).then(async res=>{if(!res.ok)throw new Error(`API responded with status: ${res.status}`);return"blob"===responseType?res.blob():res.arrayBuffer()})})(`/ImportExport/ExportMemori/${authToken}/${memoriID}`,{apiUrl,method:"POST",body:{password:password||""},responseType:"arrayBuffer"})}),process=apiUrl=>({getProcesses:async(authToken,processType)=>apiFetcher(`/Processes/${authToken}${processType?`/${processType}`:""}`,{apiUrl,method:"GET"}),getMemoriProcesses:async(authToken,memoriID,processType)=>apiFetcher(`/MemoriProcesses/${authToken}/${memoriID}${processType?`/${processType}`:""}`,{apiUrl,method:"GET"}),getProcessStatus:async(authToken,processID)=>apiFetcher(`/ProcessStatus/${authToken}/${processID}`,{apiUrl,method:"GET"}),stopProcess:async(authToken,processID)=>apiFetcher(`/StopProcess/${authToken}/${processID}`,{apiUrl,method:"POST"})}),analysis=apiUrl=>({analyzeUserQuery:async(authToken,memoriID,params)=>apiFetcher(`/Analysis/AnalyzeUserQuery/${authToken}/${memoriID}`,{apiUrl,method:"POST",body:{...params}}),getUserQueryMatches:async(authToken,analysisID,from,howMany,threshold)=>apiFetcher(`/Analysis/UserQueryMatches/${authToken}/${analysisID}/${from}/${howMany}${threshold?`/${threshold}`:""}`,{apiUrl,method:"GET"})}),completionConfig=apiUrl=>({getCompletionConfigs:(authToken,purpose)=>apiFetcher(`/CompletionConfigs/${authToken}${purpose?`/${purpose}`:""}`,{apiUrl,method:"GET"}),getCompletionConfig:(authToken,configID)=>apiFetcher(`/CompletionConfig/${authToken}/${configID}`,{apiUrl,method:"GET"}),updateCompletionConfig:(authToken,config)=>apiFetcher(`/CompletionConfig/${authToken}/${config.completionConfigID}`,{apiUrl,method:"PATCH",body:config}),deleteCompletionConfig:(authToken,configID)=>apiFetcher(`/CompletionConfig/${authToken}/${configID}`,{apiUrl,method:"DELETE"}),createCompletionConfig:(authToken,config)=>apiFetcher(`/CompletionConfig/${authToken}`,{apiUrl,method:"POST",body:config})}),badge=apiUrl=>({postOutcome:(authToken,outcomeCode)=>apiFetcher(`/Outcome/${authToken}/${outcomeCode}`,{apiUrl,method:"POST"}),getUserBadges:authToken=>apiFetcher(`/Badges/${authToken}`,{apiUrl}),getBadge:(authToken,badgeID)=>apiFetcher(`/Badge/${authToken}/${badgeID}`,{apiUrl})}),tenant=apiUrl=>({healthCheck:()=>apiFetcher("/HealthCheck",{apiUrl,method:"GET"}),getTenant:tenantName=>apiFetcher(`/Tenant/${tenantName}`,{apiUrl}),getTenantAuthenticated:(tenantName,authToken)=>apiFetcher(`/Tenant/${authToken}/${tenantName}`,{apiUrl}),getTenantList:authToken=>apiFetcher(`/Tenants/${authToken}`,{apiUrl,method:"GET"}),createTenant:(authToken,name,tenant)=>apiFetcher(`/Tenant/${authToken}/${name}`,{apiUrl,method:"POST",body:tenant}),patchTenant:(authToken,name,tenant)=>apiFetcher(`/Tenant/${authToken}/${name}`,{apiUrl,method:"PATCH",body:tenant})}),trustedApplication=apiUrl=>({createTrustedApplication:(authToken,trustedApplication)=>apiFetcher(`/TrustedApplication/${authToken}`,{apiUrl,body:trustedApplication,method:"POST"}),getTrustedApplication:(authToken,trustedApplicationID)=>apiFetcher(`/TrustedApplication/${authToken}/${trustedApplicationID}`,{apiUrl}),updateTrustedApplication:(authToken,trustedApplicationID,trustedApplication)=>apiFetcher(`/TrustedApplication/${authToken}/${trustedApplicationID}`,{apiUrl,method:"PATCH",body:trustedApplication}),deleteTrustedApplication:(authToken,trustedApplicationID)=>apiFetcher(`/TrustedApplication/${authToken}/${trustedApplicationID}`,{apiUrl,method:"DELETE"}),getTrustedApplicationsList:authToken=>apiFetcher(`/TrustedApplications/${authToken}`,{apiUrl})}),backend=apiUrl=>({asset:asset(apiUrl),memori:memori(apiUrl),user:user(apiUrl),userPwl:userPwl(apiUrl),integration:integration(apiUrl),invitation:invitation(apiUrl),consumptionLogs:consumptionLogs(apiUrl),notifications:notifications(apiUrl),importExport:importExport(apiUrl),process:process(apiUrl),analysis:analysis(apiUrl),completionConfig:completionConfig(apiUrl),badge:badge(apiUrl),tenant:tenant(apiUrl),trustedApplication:trustedApplication(apiUrl),...asset(apiUrl),...memori(apiUrl),...user(apiUrl),...userPwl(apiUrl),...integration(apiUrl),...invitation(apiUrl),...consumptionLogs(apiUrl),...notifications(apiUrl),...importExport(apiUrl),...process(apiUrl),...analysis(apiUrl),...completionConfig(apiUrl),...badge(apiUrl),...tenant(apiUrl),...trustedApplication(apiUrl)}),correlationPairs=apiUrl=>({getCorrelationPairs:async(sessionId,from,howMany)=>apiFetcher(`/CorrelationPairs/${sessionId}${from?`/${from}${howMany?`/${howMany}`:""}`:""}`,{method:"GET",apiUrl}),postCorrelationPair:async(sessionId,correlationPair)=>apiFetcher(`/CorrelationPair/${sessionId}`,{method:"POST",apiUrl,body:correlationPair}),deleteCorrelationPair:async(sessionId,pairId)=>apiFetcher(`/CorrelationPair/${sessionId}/${pairId}`,{method:"DELETE",apiUrl})}),dialog=apiUrl=>({postTextEnteredEvent:async({sessionId,text})=>apiFetcher(`/TextEnteredEvent/${sessionId}`,{method:"POST",apiUrl,body:{text}}),postTextEnteredEventExtended:async({sessionId,text,questionsAndAnswersHistory})=>apiFetcher(`/ExtendedTextEnteredEvent/${sessionId}`,{method:"POST",apiUrl,body:{text,questionsAndAnswersHistory}}),postPlaceChangedEvent:async({sessionId,placeName,latitude,longitude,uncertaintyKm})=>apiFetcher(`/PlaceChangedEvent/${sessionId}`,{method:"POST",apiUrl,body:{placeName,latitude,longitude,uncertaintyKm}}),postDateChangedEvent:async(sessionId,date)=>apiFetcher(`/DateChangedEvent/${sessionId}`,{method:"POST",apiUrl,body:{date}}),postTagChangedEvent:async(sessionId,tag)=>apiFetcher(`/TagChangedEvent/${sessionId}`,{method:"POST",apiUrl,body:{tag}}),postTimeoutEvent:async sessionId=>apiFetcher(`/TimeoutEvent/${sessionId}`,{method:"POST",apiUrl}),postMediumSelectedEvent:async(sessionId,medium)=>apiFetcher(`/MediumSelectedEvent/${sessionId}`,{method:"POST",apiUrl,body:{medium}}),postMediumDeselectedEvent:async(sessionID,mediumID)=>apiFetcher(`/MediumDeselectedEvent/${sessionID}`,{method:"POST",apiUrl,body:{mediumID}}),postDateSelectedEvent:async sessionId=>apiFetcher(`/DateSelectedEvent/${sessionId}`,{method:"GET",apiUrl}),postPlaceSelectedEvent:async sessionId=>apiFetcher(`/PlaceSelectedEvent/${sessionId}`,{method:"GET",apiUrl}),postTagSelectedEvent:async sessionId=>apiFetcher(`/TagSelectedEvent/${sessionId}`,{method:"GET",apiUrl})}),intents=apiUrl=>({getIntents:async sessionId=>apiFetcher(`/Intents/${sessionId}`,{method:"GET",apiUrl}),getIntent:async(sessionId,intentId)=>apiFetcher(`/Intent/${sessionId}/${intentId}`,{method:"GET",apiUrl}),patchIntent:async(sessionId,intent)=>apiFetcher(`/Intent/${sessionId}/${intent.intentID}`,{method:"PATCH",apiUrl,body:intent}),deleteIntent:async(sessionId,intentId)=>apiFetcher(`/Intent/${sessionId}/${intentId}`,{method:"DELETE",apiUrl}),createIntent:async(sessionId,intent)=>apiFetcher(`/Intent/${sessionId}`,{method:"POST",apiUrl,body:intent}),getIntentSlots:async sessionId=>apiFetcher(`/IntentSlots/${sessionId}`,{method:"GET",apiUrl}),getIntentSlot:async(sessionId,slotId)=>apiFetcher(`/IntentSlot/${sessionId}/${slotId}`,{method:"GET",apiUrl}),patchIntentSlot:async(sessionId,intentSlot)=>apiFetcher(`/IntentSlot/${sessionId}/${intentSlot.intentSlotID}`,{method:"PATCH",apiUrl,body:intentSlot}),deleteIntentSlot:async(sessionId,slotId)=>apiFetcher(`/IntentSlot/${sessionId}/${slotId}`,{method:"DELETE",apiUrl}),createIntentSlot:async(sessionId,intentSlot)=>apiFetcher(`/IntentSlot/${sessionId}`,{method:"POST",apiUrl,body:intentSlot})}),localizationKeys=apiUrl=>({getLocalizationKeys:async sessionId=>apiFetcher(`/LocalizationKeys/${sessionId}`,{method:"GET",apiUrl}),getLocalizationKey:async(sessionId,key)=>apiFetcher(`/LocalizationKey/${sessionId}/${key}`,{method:"GET",apiUrl}),deleteLocalizationKey:async(sessionId,key)=>apiFetcher(`/LocalizationKey/${sessionId}/${key}`,{method:"DELETE",apiUrl}),postLocalizationKey:async(sessionId,localizationKey)=>apiFetcher(`/LocalizationKey/${sessionId}`,{method:"POST",apiUrl,body:localizationKey}),patchLocalizationKey:async(sessionId,localizationKey)=>apiFetcher(`/LocalizationKey/${sessionId}`,{method:"PATCH",apiUrl,body:localizationKey})}),media=apiUrl=>({getMedia:async(sessionId,memoryId)=>apiFetcher(`/Media/${sessionId}/${memoryId}`,{method:"GET",apiUrl}),deleteMedia:async(sessionId,memoryId)=>apiFetcher(`/Media/${sessionId}/${memoryId}`,{method:"DELETE",apiUrl}),getMedium:async(sessionId,memoryId,mediumId)=>apiFetcher(`/Medium/${sessionId}/${memoryId}/${mediumId}`,{method:"GET",apiUrl}),patchMedium:async(sessionId,memoryId,mediumId)=>apiFetcher(`/Medium/${sessionId}/${memoryId}/${mediumId}`,{method:"GET",apiUrl}),deleteMedium:(sessionId,memoryId,mediumId)=>apiFetcher(`/Medium/${sessionId}/${memoryId}/${mediumId}`,{method:"GET",apiUrl}),postMedium:async(sessionId,memoryId)=>apiFetcher(`/Medium/${sessionId}/${memoryId}`,{method:"GET",apiUrl})}),memories=apiUrl=>({getMemories:async(sessionId,type)=>apiFetcher(`/Memories/${sessionId}${type?`/${type}`:""}`,{method:"GET",apiUrl}),getMemoriesPaginated:async(sessionId,from,howMany,type)=>apiFetcher(`/Memories/${sessionId}/${from}/${howMany}${type?`/${type}`:""}`,{method:"GET",apiUrl}),getMemory:async(sessionId,memoryId)=>apiFetcher(`/Memory/${sessionId}/${memoryId}`,{method:"GET",apiUrl}),patchMemory:async(sessionId,memory)=>apiFetcher(`/Memory/${sessionId}/${memory.memoryID}`,{method:"PATCH",apiUrl,body:memory}),deleteMemory:async(sessionId,memoryId)=>apiFetcher(`/Memory/${sessionId}/${memoryId}`,{method:"DELETE",apiUrl}),postMemory:async(sessionId,memory)=>apiFetcher(`/Memory/${sessionId}`,{method:"POST",apiUrl,body:memory}),getMemoryAccess:async(sessionId,memoryId)=>apiFetcher(`/MemoryAccess/${sessionId}/${memoryId}`,{method:"GET",apiUrl})}),nlp=apiUrl=>({getWordVector:async(sessionId,word)=>apiFetcher(`/WordVector/${sessionId}/${word}`,{method:"GET",apiUrl}),getSimilarWords:async(sessionId,word)=>apiFetcher(`/SimilarWords/${sessionId}/${word}`,{method:"GET",apiUrl}),guessLanguage:async(sessionId,text)=>apiFetcher(`/GuessLanguage/${sessionId}`,{method:"POST",apiUrl,body:{text}}),computeSimilarity:async(sessionId,referenceText,referenceTextType,comparisonText,comparisonTextType)=>apiFetcher(`/ComputeSimilarity/${sessionId}`,{method:"POST",apiUrl,body:{referenceText,referenceTextType,comparisonText,comparisonTextType}}),checkWords:async(sessionId,text)=>apiFetcher(`/CheckWords/${sessionId}`,{method:"POST",apiUrl,body:{text}}),suggestAnswer:async(sessionId,text)=>apiFetcher(`/SuggestAnswer/${sessionId}`,{method:"POST",apiUrl,body:{text}}),suggestTags:async(sessionId,question,answer,questionVariants)=>apiFetcher(`/SuggestTags/${sessionId}`,{method:"POST",apiUrl,body:{question,answer,questionVariants}}),suggestQuestions:async(sessionId,text)=>apiFetcher(`/SuggestQuestions/${sessionId}`,{method:"POST",apiUrl,body:{text}})}),people=apiUrl=>({getPeople:async sessionId=>apiFetcher(`/People/${sessionId}`,{method:"GET",apiUrl}),getPerson:async(sessionId,personId)=>apiFetcher(`/Person/${sessionId}/${personId}`,{method:"GET",apiUrl}),patchPerson:async(sessionId,person)=>apiFetcher(`/Person/${sessionId}/${person.personID}`,{method:"PATCH",body:person,apiUrl}),deletePerson:async(sessionId,personId)=>apiFetcher(`/Person/${sessionId}/${personId}`,{method:"DELETE",apiUrl}),postPerson:async(sessionId,person)=>apiFetcher(`/Person/${sessionId}`,{method:"POST",body:person,apiUrl})}),search=apiUrl=>({searchMemory:async(sessionId,query)=>apiFetcher(`/Search/${sessionId}`,{method:"POST",body:query,apiUrl}),searchMemoryPaginated:async(sessionId,pageIndex,pageSize,query)=>apiFetcher(`/Search/${sessionId}/${pageIndex}/${pageSize}`,{method:"POST",body:query,apiUrl}),filterMemories:async(sessionId,query)=>apiFetcher(`/FilterMemories/${sessionId}`,{method:"POST",body:query,apiUrl}),filterMemoriesPaginated:async(sessionId,pageIndex,pageSize,query)=>apiFetcher(`/FilterMemories/${sessionId}/${pageIndex}/${pageSize}`,{method:"POST",body:query,apiUrl}),getRandomMemory:async(sessionId,query)=>apiFetcher(`/Random/${sessionId}`,{method:"POST",body:query,apiUrl}),getHints:async(sessionId,query)=>apiFetcher(`/Hints/${sessionId}`,{method:"POST",body:query,apiUrl}),getMemoryTags:async sessionId=>apiFetcher(`/MemoryTags/${sessionId}`,{method:"GET",apiUrl})}),session=apiUrl=>({initSession:async(params,userAgent)=>apiFetcher("/Session",{method:"POST",body:params,headers:userAgent?{"User-Agent":userAgent}:void 0,apiUrl}),getSession:async sessionId=>apiFetcher(`/Session/${sessionId}`,{method:"GET",apiUrl}),deleteSession:async sessionId=>apiFetcher(`/Session/${sessionId}`,{method:"DELETE",apiUrl})}),stats=apiUrl=>({getTextQualityIndexes:async(sessionId,timestamp)=>apiFetcher(`/TextQualityIndexes/${sessionId}${timestamp?`/${timestamp}`:""}`,{method:"GET",apiUrl}),getEventLogs:async(sessionId,strDateFrom,strDateTo)=>apiFetcher(`/EventLogs/${sessionId}/${strDateFrom}/${strDateTo}`,{method:"GET",apiUrl}),getMemoryEventLogs:async(sessionId,memoryId,strDateFrom,strDateTo)=>apiFetcher(`/EventLogs/${sessionId}/${memoryId}/${strDateFrom}/${strDateTo}`,{method:"GET",apiUrl}),getIntentEventLogs:async(sessionId,intentId,strDateFrom,strDateTo)=>apiFetcher(`/EventLogs/${sessionId}/${intentId}/${strDateFrom}/${strDateTo}`,{method:"GET",apiUrl}),getSessionEventLogs:async(sessionID,eventLogSessionID)=>apiFetcher(`/SessionEventLogs/${sessionID}/${eventLogSessionID}`,{method:"GET",apiUrl})}),unansweredQuestions=apiUrl=>({getUnansweredQuestions:async sessionId=>apiFetcher(`/UnansweredQuestions/${sessionId}`,{method:"GET",apiUrl}),getUnansweredQuestionsPaginated:async(sessionId,from,howMany)=>apiFetcher(`/UnansweredQuestions/${sessionId}/${from}/${howMany}`,{method:"GET",apiUrl}),postUnansweredQuestion:async(sessionId,unansweredQuestion)=>apiFetcher(`/UnansweredQuestion/${sessionId}`,{method:"POST",apiUrl,body:unansweredQuestion}),deleteUnansweredQuestion:async(sessionId,unansweredQuestionId)=>apiFetcher(`/UnansweredQuestion/${sessionId}/${unansweredQuestionId}`,{method:"DELETE",apiUrl})}),contextVars=apiUrl=>({getContextVars:async sessionId=>apiFetcher(`/ContextVars/${sessionId}`,{method:"GET",apiUrl}),getContextVarNames:async sessionId=>apiFetcher(`/ContextVarNames/${sessionId}`,{method:"GET",apiUrl}),getContextVarValues:async(sessionId,contextVarName)=>apiFetcher(`/ContextVarValues/${sessionId}/${contextVarName}`,{method:"GET",apiUrl})}),customDictionary=apiUrl=>({getCustomWords:async sessionId=>apiFetcher(`/CustomWords/${sessionId}`,{method:"GET",apiUrl}),getCustomWord:async(sessionId,customWordID)=>apiFetcher(`/CustomWord/${sessionId}/${customWordID}`,{method:"GET",apiUrl}),deleteCustomWord:async(sessionId,key)=>apiFetcher(`/CustomWord/${sessionId}/${key}`,{method:"DELETE",apiUrl}),postCustomWord:async(sessionId,customWord)=>apiFetcher(`/CustomWord/${sessionId}`,{method:"POST",apiUrl,body:customWord}),patchCustomWord:async(sessionId,customWord)=>apiFetcher(`/CustomWord/${sessionId}/${customWord.customWordID}`,{method:"PATCH",apiUrl,body:customWord})}),chatLogs=apiUrl=>({getChatLogs:async(sessionId,dateFrom,dateTo)=>apiFetcher(`/ChatLogs/${sessionId}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{method:"GET",apiUrl}),getChatLogsPaged:async(sessionId,filters)=>apiFetcher(`/ChatLogsPaged/${sessionId}`,{method:"POST",apiUrl,body:filters}),getChatLogsByUser:async(sessionId,dateFrom,dateTo)=>apiFetcher(`/CurrentUserChatLogs/${sessionId}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{method:"GET",apiUrl}),getSessionChatLogs:async(sessionId,chatLogSessionID)=>apiFetcher(`/SessionChatLogs/${sessionId}/${chatLogSessionID}`,{method:"GET",apiUrl}),getUserChatLogs:async(sessionId,userID,dateFrom,dateTo)=>apiFetcher(`/UserChatLogs/${sessionId}/${userID}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{method:"GET",apiUrl}),deleteChatLogs:async(sessionId,dateFrom,dateTo)=>apiFetcher(`/ChatLogs/${sessionId}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{method:"DELETE",apiUrl}),deleteChatLog:async(sessionId,chatLogId)=>apiFetcher(`/ChatLog/${sessionId}/${chatLogId}`,{method:"DELETE",apiUrl}),getUserChatLogsByToken:async(loginToken,memoriID,dateFrom,dateTo)=>apiFetcher(`/UserChatLogsByToken/${loginToken}/${memoriID}${dateFrom?`/${dateFrom}`:""}${dateFrom&&dateTo?`/${dateTo}`:""}`,{method:"GET",apiUrl}),getUserChatLogsByTokenPaged:async filters=>apiFetcher("/UserChatLogsByTokenPaged",{method:"POST",apiUrl,body:{...filters}})}),expertReferences=apiUrl=>({getExpertReferences:async sessionId=>apiFetcher(`/ExpertReferences/${sessionId}`,{method:"GET",apiUrl}),getExpertReferencesPaginated:async(sessionId,from,howMany)=>apiFetcher(`/ExpertReferences/${sessionId}/${from}/${howMany}`,{method:"GET",apiUrl}),getExpertReference:async(sessionId,expertID)=>apiFetcher(`/ExpertReference/${sessionId}/${expertID}`,{method:"GET",apiUrl}),updateExpertReference:async(sessionId,expertReference)=>apiFetcher(`/ExpertReference/${sessionId}/${expertReference.expertID}`,{method:"PATCH",apiUrl,body:expertReference}),createExpertReference:async(sessionId,expertReference)=>apiFetcher(`/ExpertReference/${sessionId}`,{method:"POST",apiUrl,body:expertReference}),deleteExpertReference:async(sessionId,expertID)=>apiFetcher(`/ExpertReference/${sessionId}/${expertID}`,{method:"DELETE",apiUrl})}),knownFacts=apiUrl=>({getKnownFacts:async sessionId=>apiFetcher(`/KnownFacts/${sessionId}`,{method:"GET",apiUrl}),getKnownFactsPaginated:async(sessionId,from,howMany)=>apiFetcher(`/KnownFacts/${sessionId}/${from}/${howMany}`,{method:"GET",apiUrl}),getKnownFact:async(sessionId,knownFactID)=>apiFetcher(`/KnownFact/${sessionId}/${knownFactID}`,{method:"GET",apiUrl}),deleteKnownFact:async(sessionId,knownFactID)=>apiFetcher(`/KnownFact/${sessionId}/${knownFactID}`,{method:"DELETE",apiUrl})}),engine_user=apiUrl=>({getMemoriUsers:async sessionId=>apiFetcher(`/Users/${sessionId}`,{method:"GET",apiUrl}),getMemoriUsersPaginated:async(sessionId,from,howMany)=>apiFetcher(`/Users/${sessionId}/${from}/${howMany}`,{method:"GET",apiUrl}),getMemoriUser:async(sessionId,userID)=>apiFetcher(`/User/${sessionId}/${userID}`,{method:"GET",apiUrl}),getMemoriUserTopics:async(sessionId,userID)=>apiFetcher(`/UserTopics/${sessionId}/${userID}`,{method:"GET",apiUrl}),getMemoriUserTopicsPaginated:async(sessionId,userID,from,howMany)=>apiFetcher(`/UserTopics/${sessionId}/${userID}/${from}/${howMany}`,{method:"GET",apiUrl})}),topics=apiUrl=>({getTopics:async sessionId=>apiFetcher(`/Topics/${sessionId}`,{method:"GET",apiUrl}),getTopicsPaginated:async(sessionId,from,howMany)=>apiFetcher(`/Topics/${sessionId}/${from}/${howMany}`,{method:"GET",apiUrl}),getTopic:async(sessionId,topicID)=>apiFetcher(`/Topic/${sessionId}/${topicID}`,{method:"GET",apiUrl}),getTopicUsers:async(sessionId,topicId)=>apiFetcher(`/TopicUsers/${sessionId}/${topicId}`,{method:"GET",apiUrl}),getTopicUsersPaginated:async(sessionId,topicId,from,howMany)=>apiFetcher(`/TopicUsers/${sessionId}/${topicId}/${from}/${howMany}`,{method:"GET",apiUrl})}),functions=apiUrl=>({getAllFunctions:async sessionId=>apiFetcher(`/Functions/${sessionId}`,{method:"GET",apiUrl}),getFunctionsPaginated:async(sessionId,from,howMany)=>apiFetcher(`/Functions/${sessionId}/${from}/${howMany}`,{method:"GET",apiUrl}),getFunction:async(sessionId,functionID)=>apiFetcher(`/Function/${sessionId}/${functionID}`,{method:"GET",apiUrl}),patchFunction:async(sessionId,func)=>apiFetcher(`/Function/${sessionId}/${func.functionID}`,{method:"PATCH",apiUrl,body:func}),deleteFunction:async(sessionId,functionID)=>apiFetcher(`/Function/${sessionId}/${functionID}`,{method:"DELETE",apiUrl}),createFunction:async(sessionId,func)=>apiFetcher(`/Function/${sessionId}`,{method:"POST",apiUrl,body:func}),getMacroFunctions:async sessionId=>apiFetcher(`/MacroFunctions/${sessionId}`,{method:"GET",apiUrl})}),engine=apiUrl=>({correlationPairs:correlationPairs(apiUrl),...correlationPairs(apiUrl),dialog:dialog(apiUrl),...dialog(apiUrl),intents:intents(apiUrl),...intents(apiUrl),localizationKeys:localizationKeys(apiUrl),...localizationKeys(apiUrl),media:media(apiUrl),...media(apiUrl),memories:memories(apiUrl),...memories(apiUrl),nlp:nlp(apiUrl),...nlp(apiUrl),people:people(apiUrl),...people(apiUrl),search:search(apiUrl),...search(apiUrl),session:session(apiUrl),...session(apiUrl),stats:stats(apiUrl),...stats(apiUrl),unansweredQuestions:unansweredQuestions(apiUrl),...unansweredQuestions(apiUrl),contextVars:contextVars(apiUrl),...contextVars(apiUrl),customDictionary:customDictionary(apiUrl),...customDictionary(apiUrl),chatLogs:chatLogs(apiUrl),...chatLogs(apiUrl),expertReferences:expertReferences(apiUrl),...expertReferences(apiUrl),knownFacts:knownFacts(apiUrl),...knownFacts(apiUrl),user:engine_user(apiUrl),...engine_user(apiUrl),topics:topics(apiUrl),...topics(apiUrl),functions:functions(apiUrl),...functions(apiUrl)}),allowedMediaTypes=["image/jpeg","image/png","image/jpg","image/gif","text/plain","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/pdf","video/mp4","video/avi","audio/mpeg3","audio/wav","audio/mpeg","video/mpeg","model/gltf-binary"],anonTag="👤",helpers_asset=apiUrl=>({getResourceUrl:({type,resourceURI,sessionID,baseURL="https://aisuru.com"})=>{let defaultUri="cover"===type?`${baseURL}/images/memoriCover.png`:`${baseURL}/images/memoriAvatar.png`;return resourceURI&&0!==resourceURI.length?resourceURI.includes("memoriai/memory")?`${resourceURI}?memori-ai-session-id=${sessionID}`:resourceURI.startsWith("https://")||resourceURI.startsWith("http://")?`${resourceURI}${sessionID?`/${sessionID}`:""}`:resourceURI.startsWith("cloud://")?`${apiUrl.replace(/v2/,"v1")}/CloudAsset/${resourceURI.replace("cloud://","")}`:resourceURI.startsWith("guid://")?`${apiUrl.replace(/v2/,"v1")}/GuidAsset/${resourceURI.replace("guid://","")}`:defaultUri:defaultUri}}),esm=(backendEndpoint,engineEndpoint)=>{const apiUrl=(hostname=backendEndpoint)?new URL(hostname.startsWith("http")?hostname:`https://${hostname}`).origin:"https://backend.memori.ai";var hostname;const engineApiUrl=(hostname=>hostname?new URL(hostname.startsWith("http")?hostname:`https://${hostname}`).origin:"https://engine.memori.ai")(engineEndpoint),backendUrl=`${apiUrl}/api/v2`,engineUrl=`${engineApiUrl}/memori/v2`;return{backend:backend(backendUrl),...engine(engineUrl),constants:{...constants_namespaceObject,BACKEND_URL:backendUrl,ENGINE_URL:engineUrl},asset:helpers_asset(backendUrl)}}},"./node_modules/cross-fetch/dist/browser-ponyfill.js":(module,exports,__webpack_require__)=>{var __global__="undefined"!=typeof globalThis&&globalThis||"undefined"!=typeof self&&self||void 0!==__webpack_require__.g&&__webpack_require__.g,__globalThis__=function(){function F(){this.fetch=!1,this.DOMException=__global__.DOMException}return F.prototype=__global__,new F}();!function(globalThis){!function(exports){var g=void 0!==globalThis&&globalThis||"undefined"!=typeof self&&self||void 0!==__webpack_require__.g&&__webpack_require__.g||{},support_searchParams="URLSearchParams"in g,support_iterable="Symbol"in g&&"iterator"in Symbol,support_blob="FileReader"in g&&"Blob"in g&&function(){try{return new Blob,!0}catch(e){return!1}}(),support_formData="FormData"in g,support_arrayBuffer="ArrayBuffer"in g;if(support_arrayBuffer)var viewClasses=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],isArrayBufferView=ArrayBuffer.isView||function(obj){return obj&&viewClasses.indexOf(Object.prototype.toString.call(obj))>-1};function normalizeName(name){if("string"!=typeof name&&(name=String(name)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name)||""===name)throw new TypeError('Invalid character in header field name: "'+name+'"');return name.toLowerCase()}function normalizeValue(value){return"string"!=typeof value&&(value=String(value)),value}function iteratorFor(items){var iterator={next:function(){var value=items.shift();return{done:void 0===value,value}}};return support_iterable&&(iterator[Symbol.iterator]=function(){return iterator}),iterator}function Headers(headers){this.map={},headers instanceof Headers?headers.forEach(function(value,name){this.append(name,value)},this):Array.isArray(headers)?headers.forEach(function(header){if(2!=header.length)throw new TypeError("Headers constructor: expected name/value pair to be length 2, found"+header.length);this.append(header[0],header[1])},this):headers&&Object.getOwnPropertyNames(headers).forEach(function(name){this.append(name,headers[name])},this)}function consumed(body){if(!body._noBody)return body.bodyUsed?Promise.reject(new TypeError("Already read")):void(body.bodyUsed=!0)}function fileReaderReady(reader){return new Promise(function(resolve,reject){reader.onload=function(){resolve(reader.result)},reader.onerror=function(){reject(reader.error)}})}function readBlobAsArrayBuffer(blob){var reader=new FileReader,promise=fileReaderReady(reader);return reader.readAsArrayBuffer(blob),promise}function bufferClone(buf){if(buf.slice)return buf.slice(0);var view=new Uint8Array(buf.byteLength);return view.set(new Uint8Array(buf)),view.buffer}function Body(){return this.bodyUsed=!1,this._initBody=function(body){this.bodyUsed=this.bodyUsed,this._bodyInit=body,body?"string"==typeof body?this._bodyText=body:support_blob&&Blob.prototype.isPrototypeOf(body)?this._bodyBlob=body:support_formData&&FormData.prototype.isPrototypeOf(body)?this._bodyFormData=body:support_searchParams&&URLSearchParams.prototype.isPrototypeOf(body)?this._bodyText=body.toString():support_arrayBuffer&&support_blob&&function isDataView(obj){return obj&&DataView.prototype.isPrototypeOf(obj)}(body)?(this._bodyArrayBuffer=bufferClone(body.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):support_arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(body)||isArrayBufferView(body))?this._bodyArrayBuffer=bufferClone(body):this._bodyText=body=Object.prototype.toString.call(body):(this._noBody=!0,this._bodyText=""),this.headers.get("content-type")||("string"==typeof body?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):support_searchParams&&URLSearchParams.prototype.isPrototypeOf(body)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},support_blob&&(this.blob=function(){var rejected=consumed(this);if(rejected)return rejected;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))}),this.arrayBuffer=function(){if(this._bodyArrayBuffer){var isConsumed=consumed(this);return isConsumed||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}if(support_blob)return this.blob().then(readBlobAsArrayBuffer);throw new Error("could not read as ArrayBuffer")},this.text=function(){var rejected=consumed(this);if(rejected)return rejected;if(this._bodyBlob)return function readBlobAsText(blob){var reader=new FileReader,promise=fileReaderReady(reader),match=/charset=([A-Za-z0-9_-]+)/.exec(blob.type),encoding=match?match[1]:"utf-8";return reader.readAsText(blob,encoding),promise}(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(function readArrayBufferAsText(buf){for(var view=new Uint8Array(buf),chars=new Array(view.length),i=0;i<view.length;i++)chars[i]=String.fromCharCode(view[i]);return chars.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},support_formData&&(this.formData=function(){return this.text().then(decode)}),this.json=function(){return this.text().then(JSON.parse)},this}Headers.prototype.append=function(name,value){name=normalizeName(name),value=normalizeValue(value);var oldValue=this.map[name];this.map[name]=oldValue?oldValue+", "+value:value},Headers.prototype.delete=function(name){delete this.map[normalizeName(name)]},Headers.prototype.get=function(name){return name=normalizeName(name),this.has(name)?this.map[name]:null},Headers.prototype.has=function(name){return this.map.hasOwnProperty(normalizeName(name))},Headers.prototype.set=function(name,value){this.map[normalizeName(name)]=normalizeValue(value)},Headers.prototype.forEach=function(callback,thisArg){for(var name in this.map)this.map.hasOwnProperty(name)&&callback.call(thisArg,this.map[name],name,this)},Headers.prototype.keys=function(){var items=[];return this.forEach(function(value,name){items.push(name)}),iteratorFor(items)},Headers.prototype.values=function(){var items=[];return this.forEach(function(value){items.push(value)}),iteratorFor(items)},Headers.prototype.entries=function(){var items=[];return this.forEach(function(value,name){items.push([name,value])}),iteratorFor(items)},support_iterable&&(Headers.prototype[Symbol.iterator]=Headers.prototype.entries);var methods=["CONNECT","DELETE","GET","HEAD","OPTIONS","PATCH","POST","PUT","TRACE"];function Request(input,options){if(!(this instanceof Request))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');var body=(options=options||{}).body;if(input instanceof Request){if(input.bodyUsed)throw new TypeError("Already read");this.url=input.url,this.credentials=input.credentials,options.headers||(this.headers=new Headers(input.headers)),this.method=input.method,this.mode=input.mode,this.signal=input.signal,body||null==input._bodyInit||(body=input._bodyInit,input.bodyUsed=!0)}else this.url=String(input);if(this.credentials=options.credentials||this.credentials||"same-origin",!options.headers&&this.headers||(this.headers=new Headers(options.headers)),this.method=function normalizeMethod(method){var upcased=method.toUpperCase();return methods.indexOf(upcased)>-1?upcased:method}(options.method||this.method||"GET"),this.mode=options.mode||this.mode||null,this.signal=options.signal||this.signal||function(){if("AbortController"in g)return(new AbortController).signal}(),this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&body)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(body),!("GET"!==this.method&&"HEAD"!==this.method||"no-store"!==options.cache&&"no-cache"!==options.cache)){var reParamSearch=/([?&])_=[^&]*/;if(reParamSearch.test(this.url))this.url=this.url.replace(reParamSearch,"$1_="+(new Date).getTime());else{this.url+=(/\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}}function decode(body){var form=new FormData;return body.trim().split("&").forEach(function(bytes){if(bytes){var split=bytes.split("="),name=split.shift().replace(/\+/g," "),value=split.join("=").replace(/\+/g," ");form.append(decodeURIComponent(name),decodeURIComponent(value))}}),form}function Response(bodyInit,options){if(!(this instanceof Response))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');if(options||(options={}),this.type="default",this.status=void 0===options.status?200:options.status,this.status<200||this.status>599)throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");this.ok=this.status>=200&&this.status<300,this.statusText=void 0===options.statusText?"":""+options.statusText,this.headers=new Headers(options.headers),this.url=options.url||"",this._initBody(bodyInit)}Request.prototype.clone=function(){return new Request(this,{body:this._bodyInit})},Body.call(Request.prototype),Body.call(Response.prototype),Response.prototype.clone=function(){return new Response(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Headers(this.headers),url:this.url})},Response.error=function(){var response=new Response(null,{status:200,statusText:""});return response.ok=!1,response.status=0,response.type="error",response};var redirectStatuses=[301,302,303,307,308];Response.redirect=function(url,status){if(-1===redirectStatuses.indexOf(status))throw new RangeError("Invalid status code");return new Response(null,{status,headers:{location:url}})},exports.DOMException=g.DOMException;try{new exports.DOMException}catch(err){exports.DOMException=function(message,name){this.message=message,this.name=name;var error=Error(message);this.stack=error.stack},exports.DOMException.prototype=Object.create(Error.prototype),exports.DOMException.prototype.constructor=exports.DOMException}function fetch(input,init){return new Promise(function(resolve,reject){var request=new Request(input,init);if(request.signal&&request.signal.aborted)return reject(new exports.DOMException("Aborted","AbortError"));var xhr=new XMLHttpRequest;function abortXhr(){xhr.abort()}if(xhr.onload=function(){var rawHeaders,headers,options={statusText:xhr.statusText,headers:(rawHeaders=xhr.getAllResponseHeaders()||"",headers=new Headers,rawHeaders.replace(/\r?\n[\t ]+/g," ").split("\r").map(function(header){return 0===header.indexOf("\n")?header.substr(1,header.length):header}).forEach(function(line){var parts=line.split(":"),key=parts.shift().trim();if(key){var value=parts.join(":").trim();try{headers.append(key,value)}catch(error){console.warn("Response "+error.message)}}}),headers)};0===request.url.indexOf("file://")&&(xhr.status<200||xhr.status>599)?options.status=200:options.status=xhr.status,options.url="responseURL"in xhr?xhr.responseURL:options.headers.get("X-Request-URL");var body="response"in xhr?xhr.response:xhr.responseText;setTimeout(function(){resolve(new Response(body,options))},0)},xhr.onerror=function(){setTimeout(function(){reject(new TypeError("Network request failed"))},0)},xhr.ontimeout=function(){setTimeout(function(){reject(new TypeError("Network request timed out"))},0)},xhr.onabort=function(){setTimeout(function(){reject(new exports.DOMException("Aborted","AbortError"))},0)},xhr.open(request.method,function fixUrl(url){try{return""===url&&g.location.href?g.location.href:url}catch(e){return url}}(request.url),!0),"include"===request.credentials?xhr.withCredentials=!0:"omit"===request.credentials&&(xhr.withCredentials=!1),"responseType"in xhr&&(support_blob?xhr.responseType="blob":support_arrayBuffer&&(xhr.responseType="arraybuffer")),init&&"object"==typeof init.headers&&!(init.headers instanceof Headers||g.Headers&&init.headers instanceof g.Headers)){var names=[];Object.getOwnPropertyNames(init.headers).forEach(function(name){names.push(normalizeName(name)),xhr.setRequestHeader(name,normalizeValue(init.headers[name]))}),request.headers.forEach(function(value,name){-1===names.indexOf(name)&&xhr.setRequestHeader(name,value)})}else request.headers.forEach(function(value,name){xhr.setRequestHeader(name,value)});request.signal&&(request.signal.addEventListener("abort",abortXhr),xhr.onreadystatechange=function(){4===xhr.readyState&&request.signal.removeEventListener("abort",abortXhr)}),xhr.send(void 0===request._bodyInit?null:request._bodyInit)})}fetch.polyfill=!0,g.fetch||(g.fetch=fetch,g.Headers=Headers,g.Request=Request,g.Response=Response),exports.Headers=Headers,exports.Request=Request,exports.Response=Response,exports.fetch=fetch,Object.defineProperty(exports,"__esModule",{value:!0})}({})}(__globalThis__),__globalThis__.fetch.ponyfill=!0,delete __globalThis__.fetch.polyfill;var ctx=__global__.fetch?__global__:__globalThis__;(exports=ctx.fetch).default=ctx.fetch,exports.fetch=ctx.fetch,exports.Headers=ctx.Headers,exports.Request=ctx.Request,exports.Response=ctx.Response,module.exports=exports}}]);